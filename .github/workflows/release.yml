name: release

on:

  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: alpha
  push:
    branches:
      - "main"
      - "master"
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "stable"
    - "beta"
    - "dev-v[0-9]+.[0-9]+.[0-9]+.[0-9]+"
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - build: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 
      uses: actions/setup-python@master
      with:
        python-version: '3.10.6'
        # architecture: 'x64'
        # cache: 'pip'
    - name: linux dependencies setup build
      if: matrix.build == 'linux'
      run: |
        ./scripts/linux.sh deps
        ./scripts/linux.sh setup
        ./scripts/linux.sh build
    - uses: actions/upload-artifact@v3
      if: matrix.build == 'linux'
      with:
        name: artifacts_linux
        path: ./build_linux/*.deb
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
        retention-days: 1

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'pull_request'
    timeout-minutes: 2
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Install dependencies
        run: | 
          sudo apt-get update && sudo apt-get install -y gettext-base
          sudo apt install -y tree

      - if: github.event_name == 'workflow_dispatch'
        run: echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
      - if: github.event_name == 'schedule'
        run: echo 'TAG_NAME=nightly' >> $GITHUB_ENV
      # - if: github.event_name == 'push'
      # - if: ${{ github.event.name == 'push' && (github.ref_type == 'tag') }}
      - if: |
          github.event_name == 'push' &&
          github.ref_type == 'tag'
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
      # - if: ${{ (github.event.name == 'push') && (github.ref_type == 'branch') }}
      - if: |
          github.event_name == 'push' &&
          github.ref_type == 'branch'
        run: |
          echo "TAG_NAME=dev" >> $GITHUB_ENV

      # - name: Rename artifacts
      #   run: | 
      #     mv -v artifacts_linux/ryuu artifacts_linux/ryuu-linux
      - name: Public release
        run: |
          echo "Publishing to github release"
          tree -L 3
          PRERELEASE_FLAG=""
          case "$TAG_NAME" in
            dev*|nightly*|beta*|alpha*)
              echo "PRERELEASE"
              PRERELEASE_FLAG="--prerelease"
              TAG_NAME=${TAG_NAME}.${{github.run_id}}
              ;;
            *)
              echo "Not PRERELEASE"
              ;;
          esac
          echo "TAG_NAME : ${TAG_NAME}"
          gh release create ${PRERELEASE_FLAG} "$TAG_NAME" || echo "Release creation failed, but continuing..." && true
          gh release upload --clobber "$TAG_NAME" artifacts_linux/*

